제출물에 대한 실행 및 사용 방법 : 
1. cd ./db_phase4/phase4/
2. ./gradlew build
3. cd build/libs/
4. java -jar 파일명
5. 크롬 들어가서 http://localhost:8080 하면 웹사이트 나옵니다.
---------------------------------------------------------------------------------------------------------------------------------


SQL 동작 환경 및 실행 방법 등 설명하고자 하는 사항들.

Oracle Version : 21c (M1, M2 mac)

project: Gradle 
Language: Java
Spring-boot : 3.2.0
Java : 17
Templete : Thymeleaf

--------------------------------------------------------[일반, 브랜드] 유저 기능--------------------------------------------------------

회원가입 기능 : 본 기능은 회원 가입을 하는 기능입니다. 쿼리를 통해 아이디의 중복을 체크하고, 이후 Insert를 통해 새로운 아이디를 생성합니다.

유의 사항 : 회원 가입을 위해서는 아이디의 중복이 없어야 합니다. 중복이 없는 아이디를 입력한 후, 비밀번호를 설정하면 새로운 아이디가 생성됩니다.
이때 이메일, 주소 등 다른 정보는 없으므로 아래의 회원 수정 기능에서 추가해야 합니다.

쿼리 예시 : 
아이디의 중복을 체크합니다.
select *
from normaluser u
where u.id = 'woo';

만약 중복이 없다면 아래의 쿼리를 실행합니다.
insert into normaluser values('Woo', 'woo', ' ', ' ', 1, ' ', 0, ' ');

------------------------------------------------------------------------------------------------------------------------------------

로그인 기능 : 본 기능은 로그인을 하는 기능입니다.

유의사항 : 아이디와 패스워드를 입력해야 합니다.

쿼리 에시 : 
select *
from normaluser u
where u.id = 'User001'
and u.passWord = 'password001';

------------------------------------------------------------------------------------------------------------------------------------

회원 수정 기능 : 본 기능은 회원 정보를 수정하는 기능입니다.

유의 사항 : 알맞은 애트리뷰트 이름과 알맞은 도메인 형식을 입력해야 합니다.
자신의 회원 정보를 알고 싶다면, 아래의 내 개인 정보 확인을 통하여 개인 정보를 확인해야 합니다.

쿼리 예시 : 
update NormalUser u
set
u.name = 'Woo'
where u.id = 'User001';

------------------------------------------------------------[일반] 유저 기능------------------------------------------------------------

내 개인 정보 확인 기능 : 내 개인 정보를 확인하는 기능입니다. 자동으로 로그인된 아이디를 입력하여 개인 정보를 확인합니다.

유의 사항 : 없습니다.

쿼리 예시 : 
select *
from normaluser u
where u.id = 'User001';

------------------------------------------------------------------------------------------------------------------------------------

장바구니 확인 기능 : 자신의 장바구니를 확인하는 기능입니다. 자동으로 로그인된 아이디를 입력하여 장바구니를 확인합니다.

유의 사항 : 없습니다.

쿼리 예시 : 
select s.userid, s.orderid, s.productid, s.amount
from shoppingcart s, normaluser n
where n.id = s.userid;

------------------------------------------------------------------------------------------------------------------------------------

구매목록 확인 기능 : 자신이 구매한 목록을 확인하는 기능입니다. 자동으로 로그인된 아이디를 입력하여 구매 목록을 확인합니다.

유의 사항 : 없습니다.

쿼리 예시 : 
select n.id, pt.purchasetime, p.productid
from normaluser n, purchasetransaction pt, product p
where n.id = pt.userid
and pt.productid = p.productid;

------------------------------------------------------------------------------------------------------------------------------------

좋아요가 있는 상품 정보 확인 기능 : 좋아요가 있는 상품 정보를 확인하는 기능입니다.

유의 사항 : 없습니다.

쿼리 예시 : 
select p.productname, p.productprice
from product p
where p.productid in (
    select l.productid
    from normaluser n, like_info l
    where n.id = l.userid
    and p.productid = l.productid
);

------------------------------------------------------------------------------------------------------------------------------------

내가 작성한 리뷰 확인 기능 : 자신이 작성한 리뷰를 확인하는 기능입니다. 자동으로 로그인된 아이디를 입력하여 리뷰를 확인합니다.

유의 사항 : 없습니다.

쿼리 예시 : 
select n.id, t1.review
from (
    select r.userid, r.review
    from purchasetransaction pt, review r
    where pt.productid = r.productid
    and pt.userid = r.userid
) t1 join normaluser n on t1.userid = n.id;

------------------------------------------------------------------------------------------------------------------------------------

옷 구입 기능 : 옷을 구매하는 기능입니다.

유의 사항 : 구매 트랜잭션 아이디는 해쉬를 통하여 입력됩니다. 또한 유저 아이디, 제품 아이디, 지불 방법은 입력된 상태여야 합니다.
구매 날짜는 자동으로 입력됩니다. 트랜잭션이 insert 된 직후에 해당 트랜잭션 아이디를 통하여 자동으로 트랜잭션의 물건의 가격을 수정합니다.

쿼리 예시 : 
insert into PurchaseTransaction values (12345, 'User001', 10, 0, 'creadit card', TO_DATE('2023-11-19', 'yyyy-mm-dd'));

물건의 값을 입력하는 쿼리
update PurchaseTransaction pt
set totalPrice = (
    select p.productPrice
    from product p join PurchaseTransaction pt1 on p.productid = pt1.productid
    where pt1.transactionid = 12345
)
where pt.transactionid = 12345;

------------------------------------------------------------[브랜드] 유저 기능-----------------------------------------------------------

상품 등록 기능 : 브랜드 유저가 상품을 등록할 수 있는 기능입니다.

유의 사항 : 제품 아이디와 브랜드 유저 아이디는 자동으로 입력됩니다.
카테고리 번호는 사용자가 정해야합니다. 이때 카테고리에 없는 번호를 입력할 수 없습니다.

쿼리 예시 : 
insert into product values (12345, 1, 'Brand001', '김치맛치즈', 10000, '장난감입니다.', ' ');

------------------------------------------------------------------------------------------------------------------------------------

상품 수정 기능 : 브랜드 유저가 상품을 수정하는 기능입니다.

유의 사항 : 자신의 브랜드 유저 아이디를 통해 자신이 등록한 제품의 목록을 가져옵니다. 해당 목록을 참고하여 수정할 부분을 수정합니다.
이때 수정하려는 애트리뷰트가 존재해야하고, 도메인 범위에 맞게 입력해야 합니다.

쿼리 예시 : 
select p.productId, p.productName
from product p join brandUser b on p.branduserid = b.id
where b.id = 'Brand001';

해당 제품 아이디를 바탕으로 원하는 부분을 수정하는 쿼리
update product
set productDesc = '먹을 것이 아닙니다.'
where productId = 12345;

------------------------------------------------------------------------------------------------------------------------------------

상품 삭제 기능 : 브랜드 유저가 자신의 상품을 삭제하는 기능입니다.

유의 사항 : 삭제하면 해당 제품의 PK를 FK로 가지는 모든 튜플이 삭제되므로 유의해야합니다.

쿼리 예시 : 
delete from product
where productId = 12345;

--------------------------------------------------------------[어드민] 기능-------------------------------------------------------------

일반 유저, 브랜드 유저 관리 기능 : [일반, 브랜드] 유저를 관리하는 기능입니다.

유의 사항 : 해당 유저를 삭제하면, 해당 유저와 관련된 모든 정보가 삭제되므로 유의해야합니다.

쿼리 예시 :
유저의 목록을 출력하는 쿼리
select *
from branduser b;

유저를 삭제하는 쿼리
delete from branduser
where id = 'Brand001';

------------------------------------------------------------------------------------------------------------------------------------


유튜브 링크 : https://youtu.be/AA6QXgzBzSU